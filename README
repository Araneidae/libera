Epics driver for Libera Electron Beam Position Monitor (EBPM)
=============================================================

This software provides an EPICS interface to the Libera electron beam position
monitor, allowing the performance of the electron beam to be monitored through
epics channels.

This version of the epics driver is designed to work with with version 1.20 or
1.21 of the Libera device driver, as distributed by Instrumentation
Technologies, http://www.i-tech.si, and has been built to support the
comissioning of the Diamond light source, http://diamond.ac.uk.

The normal distribution point for this software is Sourceforge, from URL
    http://sourceforge.net/projects/libera-epics
The author, Dr. Michael Abbott, can be contacted at Diamond Light Source at
michael.abbott@diamond.ac.uk.

To be notified of updates to this software please either subscribe to the
EPICS tech-talk mailing list, 
    http://www.aps.anl.gov/epics/tech-talk/index.php
or to the libera-epics-announce mailing list on sourceforge
    http://lists.sourceforge.net/mailman/listinfo/libera-epics-announce


Do read the following attached files:

    COPYING
        This contains the standard GNU license, and all files in this release
        are distributed under this license.

    INSTALL
        Read this file for detailed build and install instructions.

    CHANGES
        Records the change history of this driver.

Please note that the doc directory in this distribution is out of date and
should be ignored in this release!


This release of the Libera EPICS driver provides the following functionality:

First Turn Data
    This is designed for monitoring transfer paths and behaviour during
    injection of the first turn into a synchrotron.  A hardware trigger is
    required a few microseconds before the event.

Turn-by-turn Data
    Very long waveforms (up to 524,288 points) can be captured on a hardware
    trigger and then read out in 16384 point segments.  This is designed
    specifically for tune measurements at frequencies up to 1/2 the
    synchrotron revolution frequency.

Booster Ramp Data
    Waveforms are provided giving an overview of the booster ramp.  This is
    done by reducing 100ms of ramp data to two sample rates: 1/1024 turn
    frequency, and 1/64 turn frequency.

Slow Acquisition Data
    The electron beam position is filtered down to an update rate of 10Hz.
    Automatic button switching should be enabled for high precision slow
    acquisition data.

Postmortem Data
    On receipt of a postmortem trigger a dedicated 16384 point buffer of
    turn-by-turn data preceding the trigger is captured.

Interlock Control
    A hardware interlock output is generated by Libera to confirm that the
    electron beam position is within a configured window: this is designed for
    machine protection.


All EPICS records follow a uniform naming convention of the form
    <device>:<group>:<record>
where:
    <device> is normally derived from the hostname of the epics IOC, but can
        be configured to any string at startup.  
    <group> is the major function (FT = "First Turn", etc)
    <record> is the remainder of the record name as specified below.

In the list of records below we use a number of abbreviations:
    <channel>
        Refers to four channel number 1, 2, 3, 4 corresponding to four input
        RF processing channels.  The correspondence between channel and
        buttons depends on the multiplexor switch setting.
    <iq>
        refers to eight names AI, AQ, BI, BQ, CI, CQ, DI, CQ referring to
        button values in quadrature (typically at turn-by-turn rate).
    <buttons> 
        refers to four names, A, B, C, D, referring to the four beam position
        monitor buttons.
    <positions> 
        refers to four names, X, Y, Q, S referring to the computed electron
        beam position (X,Y), a skew factor (Q) and the total beam intensity
        (S).  The intensity S is in arbitrary units, normally scaled to
        0.5822*2^31 full scale; the positions are in either nm or mm. 
    ..._S
        Records of the form <name>_S are used to write values into the driver.
        

The following EPICS records provided by this driver will be of interest:


First Turn (<group> = FT):
==========================

    RAW<channel>
        Unprocessed ADC readings, one per input channel: 1024 points at
        approximately 8.5ns sample intervals.  The permutation between channel
        and button depends on the switch position.

    WF<buttons>
        256 point arrays at approximately 34ns sampling interval, updated on
        trigger.

    <buttons>
        Button values integrated within the window specified by OFF and LEN.

    <positions>
        Position data derived from <buttons>, in mm.

    OFF_S, LEN_S
        These two fields determine the window within WF<buttons> used to
        compute the integrated <buttons> values.

    ENABLE_S
        If set to Disabled then FT processing will not occur.

    CHARGE
        Train charge as integrated within the integration window, and scaled
        by CF:ISCALE.


Free Running (<group> = FR):
============================

    WF<iq>
    WF<buttons>
    WF<positions>
        2048 point arrays updated on each trigger at turn-by-turn frequency.

    ENABLE_S
        If set to Disabled then FR processing will not occur.


Turn by Turn (<group> = TT):
============================

    ARM
        1 must be written to this record to enable capture of a full
        turn-by-turn waveform at the next trigger.

    READY
        This record becomes set to 1 when a waveform has been captured.

    CAPLEN
        Programs the number of points to be captured into the internal long
        waveform.  A maximum of 524,288 points can be specified.

    CAPTURED
        Records how many points were captured.  At Diamond's booster frequency
        (1.893MHz) something over 524,288 points can be reliably captured.

    OFFSET_S, OFFSET
        Used to set the offset into the long buffer for reading out waveforms,
        together with readback used for synchronisation.

    LENGTH_S
        Used to set how many points are read from the long buffer.  The
        default (and maximum) value is 16384.

    WF<buttons>, WF<positions>
        Waveforms of up to 1024 points read from the internal captured long
        waveform using the specified OFFSET and LENGTH.

The following protocol should be used when using this group of records.
First the record must be armed, and then the trigger should be waited for.
Segments should then be read by writing the offset and waiting for it to
update before reading.  To be explicit:

Triggering:
    - Write desired capture length to CAPLEN_S
    - Write 0 to READY and wait for READY == 0
    - Write 1 to ARM
    - Wait until READY == 1

Reading:
    - Write <offset> to OFFSET_S
    - Wait until OFFSET == <offset>
    - Read desired waveforms

If CAPLEN > 16384 then the reading process should be repeated with <offset>
set to 0, 16384, 32768, etc until the entire desired waveform has been
retrieved.


Booster (<group> = BN):
=======================

    WF<iq>
    WF<buttons>
    WF<positions>
        Decimated waveforms reduced from turn-by-turn frequency by a factor
        of 64, updated on each trigger.  The length of each waveform is equal
        to 16 times the value IOC_BN_LENGTH, as defined in
            /etc/sysconfig/epics_ioc

    WFS<positions>
        Decimated waveforms reduced from turn-by-turn frequency by a factor of
        1024, equal in length to IOC_BN_LENGTH.

    ENABLE_S
        If set to Disabled then BN processing will not occur.

Note that if BN processing is enabled then care should be taken to ensure that
1024*IOC_BN_LENGTH divided by machine revolution frequency is no longer than
the interval between triggers, otherwise triggers will be lost.


Slow Acquisition (<group> = SA):
================================

    <buttons>
    <positions>
        Averaged button readings and positions updating at approximately 10Hz.
        
    POWER
        Absolute input power in dBm.  The scaling here is hard-wired and not
        particularly accurate.

    CURRENT
        Beam current.  This is scaled by CF:ISCALE.


Postmortem (<group> = PM):
==========================

    WF<iq>
    WF<buttons>
    WF<positions>
        16384 point postmortem waveforms of turn-by-turn data captured up to
        the point of the postmortem trigger.


Interlock Control (<group> = IL):
=================================

    ENABLE_S
        If this is set to Disabled the interlock output is held active, or
        closed (unless OVERFLOW_S is also set to Enabled to enable overflow
        detection).  When set to Enabled the interlock output is only active
        while the beam position lies within the interlock window.

    MINX_S, MAXX_S, MINY_S, MAXY_S
        Interlock window: when the interlock is enabled the interlock output
        is closed ("active") so long as the beam position lies within this
        window. 

    OVER_S, TIME_S
        ADC overflow detection parameters: the interlock is dropped if the ADC
        input exceeds value OVER for at least TIME samples.

    OVERFLOW_S
        This can be set to Enabled to enable ADC overflow detection even when
        the interlock is otherwise disabled.

    ILIMIT_S
        The interlock will automatically Enabled when the beam current,
        measured by SA:CURRENT, exceeds this value.

    STATE
        STATE records whether the interlock is currently dropped or has been
        dropped within the last 0.5 seconds.  


Configuration (<group> = CF):
=============================

    ENABLED_S
        Configures whether BPM is "enabled."  If disabled then position
        interlock checking is disabled.

    DIAG_S
        Configures button or stripline orientation.

    KX_S, KY_S, KQ_S
        Scaling factor in mm.  These are determined by the physical geometry
        of the button or stripline pickups.  At Diamond typical values are
        17mm for the transfer path striplines and 10.6mm and 11mm (horizontal
        and vertical) for the booster buttons.

    BBA_X_S, BBA_Y_S
        "Beam Based Alignment" offsets.  These should ...

    BCD_X_S, BCD_Y_S

    GOLDEN_X_S, GOLDEN_Y_S

    G0_S, G1_S, G2_S, G3_S
        Gain offsets can be set for individual RF channels to compensate for
        channel imbalances within Libera.  This is only used in FT mode.

    AUTOSW_S
        Controls automatic cycling of switches with DSC (Digital Signal
        Conditioning), for sub-kHz position measurements, or fixed switch
        positions for high frequency measurements.

    TRIGSW_S
    DELAYSW_S
        

    SETSW_S
        Switch position to use when AUTOSW_S is set to Fixed.

    DSC_S
    WRITEDSC_S

    ATTEN_S
        Attenuator settings in dB: a value between 0 and 62dB can be set.

    ISCALE_S
        Nominal beam current at 0dBm input power as seen by Libera.  This is
        used to compute SA:CURRENT and FT:CHARGE.

    LMTD_S
    DETUNE_S
        This controls the "double detune" feature.  If LMTD_S is set to
        "Tuned" then the normal sample clock frequency will be used.  To
        eliminate beating between the RF frequency and a revolution frequency
        sideband of the third harmonic, "Double Detune" should be selected.
            In this case DETUNE_S determines the sample clock frequency
        offset in multiples of approximately 10Hz.


Clock (<group> = CK):
=====================

    TIMESTAMP_S
    DETUNE_S
    IOFF_S
    PHASE_S
    MC_SYNC_S
    SC_SYNC_S
    MC_LOCK
    MC_SYNC
    SC_LOCK
    SC_SYNC
    DAC
    PHASE_E
    FREQ_E


Sensors (<group> = SE):
=======================

    TEMP
        Internal temperature of Libera system.  This should normally be
        maintained below approximately 45 degrees centigrade.

    FAN1, FAN2
        Internal fan speeds, normally running at around 4000-5000 RPM.

    FREE, RAMFS
        FREE records free memory available, while RAMFS records how much
        memory is currently allocated in temporary files.  RAMFS should be
        monitored to ensure that log files (in /var/log) don't consume all
        available memory.

    CPU
        CPU usage as a percentage.

    HEALTH
        Aggregates the alarm status of all of the above sensors.  Only the
        alarm state of this record is significant.
        
    UPTIME
        Time since Libera was last rebooted in hours.

    EPICSUP
        Time since the EPICS IOC was restarted in hours.



Other (no group):
=================

    VERSION
        Version of this release.

    BUILD
        Build time and date of the running IOC.

    TICK
        Counts the number of seconds (in 0.1s steps) since the last trigger,
        and records an alarm state if the delay is more than 1 second.

    REBOOT
        Processing this record will cause the Libera IOC to reboot.

    RESTART
        Processing this record will case the EPICS IOC to restart.
