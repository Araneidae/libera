Libera EPICS driver version 0.2, for use with Libera drivers version 0.92.


INSTALLATION INSTRUCTIONS

This software depends on the following components:

 * ARM cross compiler.  The software has been developed using gcc 3.3.3
   configured to cross-compile from linux-x86 to linux-arm.

 * EPICS 3.14 base.  This version of the software has been developed using 
   version 3.14.7 of EPICS, which can be downloaded from 
        http://www.aps.anl.gov/epics/base/R3-14/7.php
   The included patch, patch-epics-3.14.7, will need to be applied to ensure
   that linux-arm support is provided.
        Paches against 3.14.6 and 3.14.8.2 are also provided, but at the time
   of release the driver has only been tested very superficially against
   these versions of Epics. 

 * Libera 0.92-2.  To run the driver a complete Libera system must be used
   together with the full Libera distribution.  Libera can be obtained from
   Instrumentation Technologies at: http://www.i-tech.si.
       To compile the driver the file libera.h from the Libera distribution
   must be placed where it can be found by the compiler. 

 * System updates.  The Libera system must be upgraded to 0.92-2.


A number of file locations will need to be defined before installing this
software, both on the development system (assumed to be Linux) and on the
target Libera machine.  These are identified through this document by the
symbols below.

Directories on development machine

LIBERA_EPICS    Root of this distribution as extracted
ARM_LINUX_GCC   Root of gcc cross compiler
EPICS_BASE      Root of epics base distribution
INSTALL_HOST    Where to build the installation

Directories on target machine

EPICS_TARGET    Location on Libera where the Epics run time files are
DRIVER_TARGET   Location on Libera where the Epics driver files are

Other symbols

EPICS_VERSION   One of 3.14.6, 3.14.7 or 3.14.8.2 for this release.


The instructions below assume that you have already extracted
libera-epics-<version>.tgz into $LIBERA_EPICS.

When running make the environment variable HOST_ARCH will be assumed to be
set thus: 
    $ export HOST_ARCH=linux-x86
This is used by the Epics environment to determine which build configuration
to use.


Building EPICS for linux-arm
============================

The instructions below assume that you don't already have a copy of EPICS
installed, and we assume the use of version 3.14.6, 3.14.7 or 3.14.8.2.

1.  Install a suitable cross compiler.  This release was built with a version
of gcc 3.3.3 configured as a cross compiler with prefix arm-linux.  Let
ARM_LINUX_GCC be the root of the compiler, so that GCC is available as
$ARM_LINUX_GCC/bin/arm-linux-gcc.

2.  Extract EPICS from
    http://www.aps.anl.gov/epics/download/base/base$EPICS_VERSION.tar.gz
into a suitable directory.  Let EPICS_BASE be the path to the root directory
of this distribution.

3.  Apply the patch thus:
    $ cd $EPICS_BASE
    $ patch -p0 <$LIBERA_EPICS/install/patch-epics-$EPICS_VERSION
Note that the correct patch must be used depending on which version of epics
is installed.  With luck the linux-arm patch will be fully incorporated into
3.14.9.

4.  Unless $ARM_LINUX_GCC is /usr you will need to tell EPICS where to find
its cross compiler by editing the site configuration file
    $EPICS_BASE/configure/os/CONFIG_SITE.linux-x86.linux-arm
and defining 
    GNU_DIR=<expansion of ARM_LINUX_GCC>

5.  Make sure that linux-arm is included as a cross compiler target
architecture, by editing
    $EPICS_BASE/configure/os/CONFIG_SITE.linux-x86.Common
and defining 
    CROSS_COMPILER_TARGET_ARCHS=linux-arm
Multiple target architectures can be supported by EPICS and defined on this
line, but the Libera driver will only use the linux-arm target.

6.  Run make from $EPICS_BASE.  This will take a while...


Building the Libera EPICS driver
================================

The Libera device driver header file is separately available, also under the
GNU license.  The instructions below assume that you have the header file as
libera-driver.0.92-2.tgz.

One thing missing from this distribution is the Python library used to build
the .db files, and as yet there is no separate distribution published for
this, at it is very dependent on the Diamond environment.  The library can be
provided on request, but it will require integration work, thus pre-built .db
files are included with this distribution.

1.  Extract the libera device driver definitions file thus:
    $ cd $LIBERA_EPICS
    $ tar xzf <path-to>/libera-driver.0.92-2.tgz

2.  Edit $LIBERA_EPICS/configure/RELEASE so that EPICS_BASE points to
$EPICS_BASE.

3.  To remove the dependency on the Python epics library, copy the prebuilt
files from the install directory to the Db directory thus:
    $ cd $LIBERA_EPICS
    $ for f in libera sensors; do
        mv install/$f.db.prebuilt liberaApp/Db/$f.db
      done

4.  Run make from $LIBERA_EPICS.  You may wish to remove docs from Makefile
first.


Preparing Libera for EPICS installation
=======================================

You will need to obtain the Libera SBC software release, version 0.92-2, from
Instrumentations Technologies (www.i-tech.si) and follow the installation
instructions.  This will ensure that you are running the correct version of
Libera. 

This EPICS driver may misbehave in obscure ways if the wrong version of Libera
software is installed, and it does not automatically detect this condition.



Installing the Libera EPICS driver
==================================

The install process is designed to take place in two stages, each stage
possibly requiring two separate steps:
    1.  Installing EPICS files
        .a  Run install-epics to build target files
        .b  Deploy files to Libera machine
    2.  Installing IOC files
        .a  Run install-ioc to build target files
        .b  Deploy files to Libera machine

At Diamond we currently implement step (.b) by sharing the files over NFS
using a permanently mounted file location.  Alternatively any mechanism of
choice can be used at this stage to copy the files to the flash file system of
Libera.

To support this process a number of symbols need to be defined in the file
     $LIBERA_BASE/install/CONFIG
which should be edited before running either of the install scripts to define
the following symbols:

    INSTALL_HOST
        Location on build machine where files should be assembled.  The
        install-epics script will place files in $INSTALL_HOST/epics and 
        install-ioc will place files in $INSTALL_HOST/ioc.

    EPICS_TARGET
        Location on target machine (Libera) where the epics run-time files
        will be installed.  This will become $EPICS_BASE on the target.

    DRIVER_TARGET
        Location on target machine where the ioc files will be installed.

Unless you have installed screen on Libera you should also define the symbol
LOG_IOC by uncommenting its line in the CONFIG file.

The Libera EPICS driver can now be installed by the following process:


First, prepare the target IOC.

1.  Edit $LIBERA_BASE/install/CONFIG as described above.

2.  Run $LIBERA_BASE/install/install-epics.  This builds a directory
$INSTALL_HOST/epics.

3.  Copy the host directory $INSTALL_HOST/epics to $EPICS_TARGET on Libera.

4.  Move the following two files on Libera:
    # mv $EPICS_TARGET/epics_ioc /etc/sysconfig/
    # mv $EPICS_TARGET/epics /etc/init.d/

These steps should normally only need to be done once during driver
development.

Now build and install the IOC files.

5.  Make the ioc and install the files
    $ cd $LIBERA_BASE
    $ make 
    $ ./install/install-ioc
This builds a directory $INSTALL_HOST/ioc.

6.  Copy the host directory $INSTALL_HOST/ioc to $DRIVER_TARGET on Libera.


Running the Libera EPICS driver
===============================

The ioc can be run in two ways on Libera.  Interactive operation is possible
by running the ioc file directly:
    # $DRIVER_TARGET/runioc
This will provide an epics shell prompt.

Alternatively, daemon operation is possible by using the epics script:
    # /etc/init.d/epics start
This will start the ioc running, and it can be stopped by running
    # /etc/init.d/epics stop
In this mode of operation epics can be configured to start automatically on
IOC reboot by means of the command
    # ln -s ../init.d/epics /etc/rc3.d/S900epics
