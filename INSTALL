Libera EPICS driver version 0.5, for use with Libera drivers version 1.00.


INSTALLATION INSTRUCTIONS

This software depends on the following components:

 * ARM cross compiler.  The software has been developed using gcc 3.3.3
   configured to cross-compile from linux-x86 to linux-arm.

 * EPICS 3.14 base.  This version of the software has been developed using 
   version 3.14.8.2 of EPICS, which can be downloaded from 
        http://www.aps.anl.gov/epics/base/R3-14/8.php
   The included patch, patch-epics-3.14.8.2, will need to be applied to ensure
   that linux-arm support is provided.
        Paches against 3.14.6 and 3.14.7 are also provided.

 * Libera 1.00.  To run the driver a complete Libera system must be used
   together with the full Libera distribution.  Libera can be obtained from
   Instrumentation Technologies at: http://www.i-tech.si.
       The CSPI library and its associated header files are included with this
   distribution.  Its makefile has been modified to integrate with the EPICS
   build.

 * System updates.  The Libera system must be upgraded to 1.00.


The instructions below are divided into the following stages:

 1. Preparation
 2. Building EPICS for linux-arm
 3. Building the Libera EPICS driver
 4. Preparing Libera for EPICS installation
 5. Installing the Libera EPICS driver
 6. Running the Libera EPICS driver



Preparation
===========

A number of file locations will need to be defined before installing this
software, both on the development system (assumed to be Linux) and on the
target Libera machine.  These are identified through this document by the
symbols below.

Directories on development machine:

LIBERA_EPICS    Root of this distribution as extracted
ARM_LINUX_GCC   Root of gcc cross compiler
EPICS_BASE      Root of epics base distribution
INSTALL_HOST    Where to build the installation

The following directory on the target machine is assumed to contain the same
files as $INSTALL_HOST.  It is assumed in this document that this is done
through an NFS mount on Libera.

INSTALL_TARGET  Where to find installation files on Libera.  

Other symbols:

EPICS_VERSION   One of 3.14.6, 3.14.7 or 3.14.8.2 for this release.


The instructions below assume that you have already extracted
libera-epics-$EPICS_VERSION.tgz into $LIBERA_EPICS.

When running make the environment variable HOST_ARCH will be assumed to be
set thus: 
    $ export HOST_ARCH=linux-x86
This is used by the Epics environment to determine which build configuration
to use.


Start by editing $LIBERA_EPICS/install/CONFIG to suit your installation.  The
following symbols should be edited:

    INSTALL_HOST    Set to $INSTALL_HOST as described above
    EPICS_TARGET    } See notes below for
    DRIVER_TARGET   } these two symbols

    The two _TARGET symbols need only be defined if using the Test
    installation mode described below (under "Installing the Libera EPICS
    driver"), in which case they should be set as follows:
        EPICS_TARGET    $INSTALL_TARGET/epics
        DRIVER_TARGET   $INSTALL_TARGET/ioc
    If only using Final installation these can be ignored.

In all of the instructions below a line of the form
    $ command
describes a command to be run on the host build machine, and a line of the
form
    # command
describes a command to be run on Libera, when logged in as root.



Building EPICS for linux-arm
============================

The instructions below assume that you don't already have a copy of EPICS
installed, and we assume the use of version 3.14.6, 3.14.7 or 3.14.8.2.

1.  Install a suitable cross compiler.  This release was built with a version
of gcc 3.3.3 configured as a cross compiler with prefix arm-linux.  Let
ARM_LINUX_GCC be the root of the compiler, so that GCC is available as
$ARM_LINUX_GCC/bin/arm-linux-gcc.

2.  Extract EPICS from
    http://www.aps.anl.gov/epics/download/base/baseR$EPICS_VERSION.tar.gz
into a suitable directory.  Let EPICS_BASE be the path to the root directory
of this distribution.

3.  Apply the patch thus:
    $ cd $EPICS_BASE
    $ patch -p0 <$LIBERA_EPICS/install/patch-epics-$EPICS_VERSION
Note that the correct patch must be used depending on which version of epics
is installed.  With luck the linux-arm patch will be fully incorporated into
3.14.9.

4.  Unless $ARM_LINUX_GCC is /usr you will need to tell EPICS where to find
its cross compiler by editing the site configuration file
    $EPICS_BASE/configure/os/CONFIG_SITE.linux-x86.linux-arm
and defining 
    GNU_DIR=<expansion of ARM_LINUX_GCC>

5.  Make sure that linux-arm is included as a cross compiler target
architecture, by editing
    $EPICS_BASE/configure/os/CONFIG_SITE.linux-x86.Common
and defining 
    CROSS_COMPILER_TARGET_ARCHS=linux-arm
Multiple target architectures can be supported by EPICS and defined on this
line, but the Libera driver will only use the linux-arm target.

6.  Run make from $EPICS_BASE.  This will take a while...
    $ cd $EPICS_BASE
    $ make

7.  Extract the Libera EPICS files to $INSTALL_HOST by running
    $ $LIBERA_EPICS/install/install-epics



Building the Libera EPICS driver
================================

One thing missing from this distribution is the Python library used to build
the .db files, and as yet there is no separate distribution published for
this, as it is very dependent on the Diamond environment.  The library can be
provided on request, but it will require integration work, thus pre-built .db
files are included with this distribution.

1.  Edit $LIBERA_EPICS/configure/RELEASE so that EPICS_BASE points to
$EPICS_BASE.

2.  To remove the dependency on the Python epics library, copy the prebuilt
files from the install directory to the Db directory thus:
    $ cd $LIBERA_EPICS
    $ cp install/prebuilt/*.db liberaApp/Db

3.  Run make thus:
    $ make

4.  Copy the runtime files to $INSTALL_HOST by running
    $ ./install/install-ioc
This builds the directory $INSTALL_HOST/ioc.

If your build environment lacks Python then a pre-built header file is also
provided in the install/prebuilt directory which can be copied into
liberaApp/src if required.



Preparing Libera for EPICS installation
=======================================

You will need to obtain the Libera SBC software release, version 1.00, from
Instrumentations Technologies (www.i-tech.si) and follow the installation
instructions.  This will ensure that you are running the correct version of
Libera. 

This EPICS driver may misbehave in obscure ways if the wrong version of Libera
software is installed.



Installing the Libera EPICS driver
==================================

Two modes of installation are supported:

Test    Designed for testing, files are accessed over NFS.

Final   Designed for production, files are copied to standard locations on the
        Libera IOC.

In all of the following it is assumed that the Libera IOC has access to the
contents of the directory $INSTALL_HOST as $INSTALL_TARGET, either by copying
the files onto Libera, or via a shared NFS mount point.

There are two stages to both installation modes:

Install EPICS   
    This only needs to be done once, or when the EPICS version is upgraded.

Install Driver
    This should be done each time this driver is updated.


Test Installation
-----------------

    In this mode of installation the run-time files are accessed over NFS and
    nothing is copied onto the Libera file system.  This is useful when
    developing Libera, but is not recommended for normal operation as
    uninterrupt access to NFS is requred.

    In this mode the following symbols in install/CONFIG are used to locate
    files:

        EPICS_TARGET    Location for EPICS runtime files
        DRIVER_TARGET   Location for Libera EPICS driver runtime files
        IOC_STATE_PATH  Location for storing persistent state

    To install a Test installation run one of following commands on Libera,
    either:
    # $INSTALL_TARGET/ioc/install/libera-install-ioc -t
    or:
    # $INSTALL_TARGET/ioc/install/libera-install-ioc -ta

    Using the -a option ensures that the libera IOC is automatically started
    on reboot.


Final Installation
------------------
    
    In this mode of installation the run-time files are copied to standard
    locations on Libera.  This mode is recommended for production use.

    In this mode the following hard wired targets are used on Libera for
    placing files:

        /opt/epics      Location for EPICS runtime files
        /opt/ioc        Location for Libera EPICS driver runtime files
        /opt/state      Location for storing persistent state

    Installation of a Final installation requires two steps, one to copy the
    EPICS files over, a second to copy the ioc files.  Of course, the EPICS
    files only need to be copied once, while the ioc files should be copied
    each time the IOC changes.

    To install the EPICS files run the following command on Libera:
    # $INSTALL_TARGET/epics/libera-install-epics

    To install the IOC files run one of the following commands on Libera,
    either:
    # $INSTALL_TARGET/ioc/install/libera-install-ioc -f
    or:
    # $INSTALL_TARGET/ioc/install/libera-install-ioc -fa

    Using the -a option ensures that the libera IOC is automatically started
    on reboot.



Running the Libera EPICS driver
===============================

The ioc can be run in two ways on Libera.  Interactive operation is possible
by running the ioc file directly:
    # $DRIVER_TARGET/runioc
This will provide an epics shell prompt.

Alternatively, daemon operation is possible by using the epics script:
    # /etc/init.d/epics start
This will start the ioc running, and it can be stopped by running
    # /etc/init.d/epics stop

If the -a option has been used when running libera-install-ioc then the EPICS
IOC will start automatically when Libera reboots.

Note that the IOC will take the IOC device name from the configured hostname,
thus for example if 
    # hostname
returns
    TS-DI-EBPM-01
then running
    $ caget TS-DI-EBPM-01:VERSION
should return the IOC build version.


The script $LIBERA_EPICS/opi/demoLibera will use the EPICS EDM viewer to
display $LIBERA_EPICS/opi/launcher.edl which provides access to Libera control
screens.
