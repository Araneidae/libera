#!/bin/sh

# This file is part of the Libera EPICS Driver,
# Copyright (C) 2005-2009 Michael Abbott, Diamond Light Source Ltd.
#
# The Libera EPICS Driver is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The Libera EPICS Driver is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Contact:
#      Dr. Michael Abbott,
#      Diamond Light Source Ltd,
#      Diamond House,
#      Chilton,
#      Didcot,
#      Oxfordshire,
#      OX11 0DE
#      michael.abbott@diamond.ac.uk

# Creates an intermediate installation directory: extracts all the files
# required for a complete installation from the current build.

set -e

# Files needed for installation process:
#     CONFIG                Configuration template installed in /etc/libera
#     ioc-log-blacklist     List of PVs to ignore when PV put logging
#     epics                 Startup script installed in /etc/init.d
#     libera-driver         Startup script installed in /etc/init.d
#     healthd               Startup script installed in /etc/init.d
#     locations             List of machine locations (eg SR/BO)
#     make-notch-filters    Script to create notch filters
#     libera-install-ioc    Script to install libera IOC on target
INSTALL_FILES='
    CONFIG
    ioc-log-blacklist
    epics
    libera-driver
    healthd
    locations
    make-notch-filters
    libera-install-ioc'
OPT_BIN_FILES='configure-location configure-network install-fpga fpga_init'


SOURCE="$(cd "$(dirname "$0")"/..; pwd)"
. "$SOURCE"/install_d/CONFIG
if (($# > 0)); then
    INSTALL_HOST="$1"
else
    : ${INSTALL_HOST:?Local installation path not defined}
fi


# Erase everything in the target directory: start from scratch on each
# install.
TARGET="$INSTALL_HOST"/ioc
rm -rf "$TARGET"
mkdir -p "$TARGET"

# Copy over the appropriate built components
for dir in bin dbd db; do
    cp -r "$SOURCE/$dir" "$TARGET"
done

# Copy over the installation specific files into the install directory.
mkdir -p "$TARGET"/install_d
for f in $INSTALL_FILES; do
    cp "$SOURCE"/install_d/$f "$TARGET"/install_d
done

# Copy over the scripts
mkdir -p "$TARGET"/scripts
cp "$SOURCE"/scripts/* "$TARGET"/scripts

# Copy over the base directory
mkdir -p "$TARGET"/base "$TARGET"/base/lib
for f in $OPT_BIN_FILES; do
    cp "$SOURCE"/base/$f "$TARGET"/base
done
cp "$SOURCE"/base/lib/* "$TARGET"/base/lib

# Place the runioc script
cp "$SOURCE"/runioc "$TARGET"


# A special hack for targeting Libera 1.46 systems: here we're using a newer
# compiler than used for the original distribution, and the C++ .so needs to
# be installed.  Hunt it down here and place it ready for installation.
GNU_DIR="$(
    make -C "$SOURCE"/configure -pn linux-arm 2>/dev/null |
    # This is annoying: can get the local GNU_DIR in the list as well; assume
    # the cross compiler is *not* in /usr
    sed -n '/^GNU_DIR = /{s///;\:/usr:!p;}')"
CPP_SO="$GNU_DIR/arm-linux/lib/libstdc++.so.6"
if [ -n "$GNU_DIR" -a -f "$CPP_SO" ]; then
    CPP_SO_="$(readlink -fn "$CPP_SO")"  &&
    cp "$CPP_SO_" "$TARGET"/install_d
fi


echo IOC installed in "$TARGET".
