#!/bin/sh

# This file is part of the Libera EPICS Driver,
# Copyright (C) 2005-2011 Michael Abbott, Diamond Light Source Ltd.
#
# The Libera EPICS Driver is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The Libera EPICS Driver is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Contact:
#      Dr. Michael Abbott,
#      Diamond Light Source Ltd,
#      Diamond House,
#      Chilton,
#      Didcot,
#      Oxfordshire,
#      OX11 0DE
#      michael.abbott@diamond.ac.uk

# Generates notch filter files /opt/lib/notch1 and /opt/lib/notch2 by
# scanning /opt/bin/fpga_init_specific.  If these files already exist and -f
# is not specified then nothing is done.

Error() { echo >&2 "$@"; exit 1; }

# Sign extension hack.  Relies on 64 bit arithmetic in our shell, which is what
# we appear to have in all our Liberas.
sign_extend() { echo $((($1 << 32) >> 32)); }
# Check that our sign extension hack works in this shell.
[ $(sign_extend 0x89ABCDEF) = -1985229329 ]  ||
    Error Unable to convert notch filters


if [ -e /opt/lib/notch1 -a /opt/lib/notch2 -a "$1" != -f ]; then
    echo Notch filters already present, not overwriting
    exit 0
fi

for notch in 0 1; do
    ADDR=$(printf "0x%08X" $((0x1401C018 + 4*notch)))
    FILE=/opt/lib/notch$((notch+1))

    cat /opt/bin/fpga_init_specific |
    sed -n "/^.*Monitor $ADDR w /{s///;p;}" |
    while read; do
        # Convert hex value into signed integer value as required by Libera.
        sign_extend $REPLY
    done >"$FILE"

    if [ $(wc -l <$FILE) != 5 ]; then
        rm -f $FILE
        Error "Invalid notch file read"
    fi
done
