#!/bin/sh

# This file is part of the Libera EPICS Driver,
# Copyright (C) 2005-2007 Michael Abbott, Diamond Light Source Ltd.
#
# The Libera EPICS Driver is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The Libera EPICS Driver is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Contact:
#      Dr. Michael Abbott,
#      Diamond Light Source Ltd,
#      Diamond House,
#      Chilton,
#      Didcot,
#      Oxfordshire,
#      OX11 0DE
#      michael.abbott@diamond.ac.uk

# Starts or stops EPICS IOC in the background
# This file should be placed in /etc/init.d/epics

. /etc/init.d/epics-functions
. $CONFIGDIR/epics_ioc


# Sensible defaults
: "${IOC_LOG:=/var/log/ioc}"

case "$1" in
    start)
        echo -n "Starting EPICS"
        if [ -e /var/run/ioc.pid ]; then
            echo -n " - already running?"
            print_status failure
        else
            # Run as a daemon with all output sent to log file.
            "$LIBERA_IOC" -n >>"$IOC_LOG" 2>&1 </dev/null &
            evaluate_retval
        fi
        ;;

    stop)
        echo -n "Stopping EPICS"
        [ -e /var/run/ioc.pid ] && kill "$(cat /var/run/ioc.pid)"
        evaluate_retval

        # Try a rather more rigorous stop if the kill above failed.  Give the
        # process a couple of seconds to die.
        i=0; while [ $i -lt 20 ]; do
            [ -e /var/run/ioc.pid ]  ||  break
            sleep 0.1
            i=$((i+1))
        done
        if [ -e /var/run/ioc.pid ]; then
            kill -9 "$(cat /var/run/ioc.pid)"  &&
            echo >&2 'IOC killed forcibly!'
        fi
        
        # Make sure that the ioc.pid file doesn't stay around, otherwise if
        # the ioc dies without removing its pid file we can never restart
        # without manual intervention.
        rm -f /var/run/ioc.pid
        ;;

    restart)
        "$0" stop
        sleep 1
        "$0" start
        ;;

    *)  echo "Usage: $0 {start|stop|restart}"
        exit 1
        ;;
esac
