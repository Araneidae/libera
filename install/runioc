#!/bin/sh

# This file is part of the Libera EPICS Driver,
# Copyright (C) 2005-2007 Michael Abbott, Diamond Light Source Ltd.
#
# The Libera EPICS Driver is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The Libera EPICS Driver is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Contact:
#      Dr. Michael Abbott,
#      Diamond Light Source Ltd,
#      Diamond House,
#      Chilton,
#      Didcot,
#      Oxfordshire,
#      OX11 0DE
#      michael.abbott@diamond.ac.uk

# Startup script for Libera EPICS ioc.


# ----------------------------------------------------------------------------
# Support routines

# Export named parameter to libera.db definitions.
#
#   LiberaParameter <name> <value>
#
export LIBERA_MACROS=''
LiberaParameter()
{
    [ -n "$LIBERA_MACROS" ]  &&  LIBERA_MACROS="$LIBERA_MACROS",
    LIBERA_MACROS="$LIBERA_MACROS$1=$2"
}


# Construct IOC parameter string array
#
#   IocParameter <flag> <value>
#
declare -a IOC_PARAMETERS
IocParameter()
{
    IOC_PARAMETERS[${#IOC_PARAMETERS[@]}]="$1$2"
}


# ----------------------------------------------------------------------------

# Use the ioc home directory as the startup directory.
cd "$(dirname "$0")/../.."

# Discover whether the /etc/sysconfig directory exists.  On Linux 2.4 (old
# style installation) we pick up our configurations from /etc/sysconfig, but
# on 2.6 we use /etc/default.
if [ -d /etc/sysconfig ]; then
    CONFIGDIR=/etc/sysconfig
else
    CONFIGDIR=/etc/default
fi

# Read the libera configuration.  We're interested in FREV, HARMONIC,
# DECIMATION and MCPRESC at present.  Do this early to ensure our own
# definitions don't get overwritten.
. $CONFIGDIR/libera

# Pick up the IOC specific configuration parameters together with the
# location of the EPICS files.
. $CONFIGDIR/epics_ioc


export EPICS_CA_MAX_ARRAY_BYTES=1000000
export DEVICE="$(hostname)"

PIDFILE=/var/run/ioc.pid
BIN_DIR=./bin/linux-arm

# Check for arguments
RESTART_LMTD=0
while getopts 'd:nflh' option; do
    case "$option" in
    d)  DEVICE="$OPTARG" ;;
    n)  IocParameter -n  ;;
    f)  rm -f "$PIDFILE" ;;
    l)  RESTART_LMTD=1 ;;
    h)  cat <<'EOF' 
Usage: runioc [options]
    -d <device>:  use supplied device name instead of hostname
    -n            run non-interactive without an IOC shell
    -f            run even if pid file already present
    -l            restart lmtd even if it's already running properly
EOF
        exit 0 ;;
    *)  echo >&2 'Invalid option: try -h for help'
        exit 1 ;;
    esac
done
# No extra arguments allowed
if (($# >= OPTIND)); then
    echo >&2 'Invalid arguments: try -h for help'
    exit 1
fi


# Don't run if the ioc.pid file is present: this is a simple technique to
# prevent us interfering with an already running instance.
if [ -e "$PIDFILE" ]; then
    echo >&2 'PID file found: check epics is not already running'
    exit 1
fi

# If a core dump directory is configured, set this up.
if [ -n "$IOC_CORE" -a -d "$IOC_CORE" ]; then
    ulimit -c unlimited
    echo "$IOC_CORE/core.%h.%t" >/proc/sys/kernel/core_pattern
fi

# Ensure that we're running our own version of lmtd
if ((RESTART_LMTD))  ||  ! [ -e /tmp/lmtd.command ]; then
    if [ -e /var/run/lmtd.pid ]; then
        kill $(cat /var/run/lmtd.pid)
    elif [ -e /var/run/lplld.pid ]; then
        kill $(cat /var/run/lplld.pid)
        sleep 1
    fi
    $BIN_DIR/lmtd -p$MCPRESC -d$DECIMATION -o$OFFSET_TUNE -r$HARMONIC
fi

# Ensure the DSC daemon isn't running: we're going to replace its
# functionality!
if [ -e /var/run/ldscd.pid ]; then
    kill $(cat /var/run/ldscd.pid)
    # It seems to be quite important to give the DSC daemon time to quit.
    sleep 1
fi


# Export the database parameters needed to configure libera.db.  These are
# record lengths which need to be defined at IOC startup.
LiberaParameter DEVICE    "$DEVICE"
LiberaParameter BN_SHORT  $((IOC_BN_LENGTH))
LiberaParameter BN_LONG   $((16*IOC_BN_LENGTH))
LiberaParameter TT_LONG   $((IOC_TT_LENGTH))
LiberaParameter TT_WINDOW $((IOC_TT_WINDOW))
LiberaParameter FR_LENGTH $((IOC_FR_LENGTH))

# Define the corresponding record lengths for the IOC itself
IocParameter -cBN= $((IOC_BN_LENGTH))
IocParameter -cTT= $((IOC_TT_LENGTH))
IocParameter -cTW= $((IOC_TT_WINDOW))
IocParameter -cFR= $((IOC_FR_LENGTH))
IocParameter -cS0FT= $((IOC_S0_FT))
IocParameter -cS0SA= $((IOC_S0_SA))
# Pass through fundamental ring parameters
IocParameter -cHA= $((HARMONIC))
IocParameter -cDE= $((DECIMATION))
IocParameter -cLP= $((MCPRESC))

# Where the IOC should write its pid file
IocParameter -p "$PIDFILE"
# Revolution frequency (used to compute time axis for BN mode)
IocParameter -f $FREV
# Location of persistent state, but only if a path has been defined.
[ -n "$IOC_STATE_PATH" ] && IocParameter -s "$IOC_STATE_PATH/$DEVICE.state"

# Now run the IOC.
echo 'Starting IOC at' $(date)
echo "IOC parameters: ${IOC_PARAMETERS[*]}"
$BIN_DIR/ioc "${IOC_PARAMETERS[@]}" $BIN_DIR/st.cmd
echo 'IOC stopped at' $(date)

# When we exit make a good effort to clean up any debris.  If we crashed (and
# were unlucky) we may have left lots of threads behind!
DEBRIS="$(ps ho pid -C ioc)"
if [ -n "$DEBRIS" ]; then
    echo Killing residual ioc processes
    kill -9 $DEBRIS
    DEBRIS="$(ps ho pid -C ioc)"
    [ -n "$DEBRIS" ]  &&
        echo Processes not killed: $DEBRIS
fi

# Finally make sure we don't leave the pid file behind!
rm -f "$PIDFILE"
