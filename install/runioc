#!/bin/sh

# This file is part of the Libera EPICS Driver,
# Copyright (C) 2005  Michael Abbott, Diamond Light Source Ltd.
#
# The Libera EPICS Driver is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The Libera EPICS Driver is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Contact:
#      Dr. Michael Abbott,
#      Diamond Light Source Ltd,
#      Diamond House,
#      Chilton,
#      Didcot,
#      Oxfordshire,
#      OX11 0DE
#      michael.abbott@diamond.ac.uk

# Startup script for Libera EPICS ioc.


# ----------------------------------------------------------------------------
# Support routines

# Export named parameter to libera.db definitions.
#
#   LiberaParameter <name> <value>
#   LiberaParameter <name>
#
# If <value> is omitted the $<name> is used.
#
export LIBERA_MACROS=''
LiberaParameter()
{
    local value
    if (($# < 2)); then
        eval value=\"\$$1\"
    else
        value="$2"
    fi
    [ -n "$LIBERA_MACROS" ]  &&  LIBERA_MACROS="$LIBERA_MACROS",
    LIBERA_MACROS="$LIBERA_MACROS$1=$value"
}


# Construct IOC parameter string array
#
#   IocParameter <flag>
#   IocParameter <flag> <value>
declare -a IOC_PARAMETERS
IocParameter()
{
    IOC_PARAMETERS[${#IOC_PARAMETERS[@]}]="$1$2"
}


# ----------------------------------------------------------------------------

# Use the ioc home directory as the startup directory.
cd "$(dirname "$0")"

# Pick up the IOC specific configuration parameters together with the
# location of the EPICS files.
. /etc/sysconfig/epics_ioc

export EPICS_BASE
export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$EPICS_BASE/lib"
export PATH="$PATH:$EPICS_BASE/bin"
export EPICS_CA_MAX_ARRAY_BYTES=1000000
export DEVICE="$(hostname)"

PIDFILE=/var/run/ioc.pid

while getopts "d:nfh" option; do
    case "$option" in
    d)  DEVICE="$OPTARG" ;;
    n)  IocParameter -n  ;;
    f)  rm -f "$PIDFILE" ;;
    h)  cat <<'EOF' 
Usage: runioc [options]
    -d <device>:  use supplied device name instead of hostname
    -n            run non-interactive without an IOC shell
    -f            run even if pid file already present
EOF
        exit 0 ;;
    *)  echo >&2 'Invalid option: try -h for help'
        exit 1 ;;
    esac
done


# Don't run if the ioc.pid file is present: this is a simple technique to
# prevent us interfering with an already running instance.
if [ -e "$PIDFILE" ]; then
    echo >&2 'PID file found: check epics is not already running'
    exit 1
fi


# Start the repeater first and background it properly to avoid possible
# conflicts (for instance, it can hold important file handles open!)
caRepeater </dev/null >/dev/null 2>&1 &

# Export the database parameters needed to configure libera.db
LiberaParameter DEVICE
LiberaParameter BN_SHORT  $((IOC_BN_LENGTH))
LiberaParameter BN_LONG   $((16*IOC_BN_LENGTH))
LiberaParameter TT_LONG   $((IOC_TT_LENGTH))
LiberaParameter TT_WINDOW $((IOC_TT_WINDOW))
LiberaParameter FR_LENGTH $((IOC_FR_LENGTH))

IocParameter -p "$PIDFILE"
IocParameter -cBN= $((IOC_BN_LENGTH))
IocParameter -cTT= $((IOC_TT_LENGTH))
IocParameter -cTW= $((IOC_TT_WINDOW))
IocParameter -cFR= $((IOC_FR_LENGTH))
# Now run the ioc proper.
./bin/ioc "${IOC_PARAMETERS[@]}" st.cmd

# If we crash, make sure we don't leave the pid file behind!
rm -f "$PIDFILE"
