#!/bin/sh

# This file is part of the Libera EPICS Driver,
# Copyright (C) 2005  Michael Abbott, Diamond Light Source Ltd.
#
# The Libera EPICS Driver is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
#
# The Libera EPICS Driver is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc., 51
# Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#
# Contact:
#      Dr. Michael Abbott,
#      Diamond Light Source Ltd,
#      Diamond House,
#      Chilton,
#      Didcot,
#      Oxfordshire,
#      OX11 0DE
#      michael.abbott@diamond.ac.uk

# This script is copied into $INSTALL_HOST and should be run in place on the
# IOC to ensure that the appropriate files are copied into place.
#
# This installation script supports two modes of operation of the installed
# IOC: testing (installed on the remote file system) or final (copied to the
# local file system).

# Ensure this isn't run by accident on the development machine.
[ "$(uname -m)" != armv5tel ]  &&
    Error This should be run on Libera

SOURCE="$(cd "$(dirname "$0")"/..; pwd)"

function Error()
{
    echo >&2 "$@"
    exit 1
}


# Parse local installation options
TARGET=none
AUTOSTART=0
STARTNOW=0
while getopts 'ftash' option; do
    case "$option" in
    f)  TARGET=final ;;
    t)  TARGET=test ;;
    a)  AUTOSTART=1 ;;
    s)  STARTNOW=1 ;;
    h)  cat <<'EOF'
Usage: libera-install-ioc <options> [<location>]
where <options> includes
    -f  Final install: copy files to local /opt directory
    -t  Testing install: don't copy files, use from configured location
    -a  Enable autostart of ioc: link /etc/init.d/epics into rc3.d and rc6.d
    -s  Start IOC after installation
and <location> is a two character location code used to configure location
specific settings.
EOF
        exit 0 ;;
    *)  Error 'Invalid option: try -h for help' ;;
    esac
done
shift $((OPTIND - 1))
[ $TARGET == none ]  &&
    Error 'Specify installation option.  Try -h for help.'

# Read the location code, but only if it's actually required!  The set of
# location codes is determined by a simple pattern match: if this set is
# empty then no location needs to be specified, otherwise the code should be
# one of these patterns.
LOCATIONS="$(
    # Extract all lines of the form xx_IOC_...
    sed -n '/^\([[:alpha:]][[:alnum:]]\)_IOC_.*$/{s//\1/;p;}' \
        "$SOURCE"/install/epics_ioc )"
if [ -n "$LOCATIONS" ]; then
    (($# > 0))  ||  Error "Must specify a location"
    LOCATION="$1"
    shift
    # Check the location given is one of the ones we know
    echo "$LOCATIONS" | grep "^$LOCATION\$" >/dev/null  ||
        # Note that neither sort nor uniq are present on libera, so we can't
        # filter $LOCATIONS, so it may be a bit repetitive!
        Error "Invalid location $LOCATION: use one of" $LOCATIONS
fi

(($# != 0))  &&
    Error 'Invalid arguments: try -h for help'
    
    
# Ensure epics driver isn't running at the moment.
if [ -e /var/run/ioc.pid ]; then
    if [ -x /etc/init.d/epics ]; then
        /etc/init.d/epics stop
    else
        kill "$(cat /var/run/ioc.pid)"
        rm -f /var/run/ioc.pid
    fi
fi

# If final installation selected then copy over all the run-time files and
# update the configuration file to point to them.
if [ $TARGET == final ]; then
    # Hard-wired targets on local file system
    EPICS_TARGET=/opt/epics
    IOC_TARGET=/opt/ioc
    STATE_DIR=/opt/state

    # Ensure the state directory exists (but don't interfere with it!)
    mkdir -p "$STATE_DIR"  &&

    # Copy over all the runtime files.  First make sure the target directory
    # is fresh.
    rm -rf "$IOC_TARGET"  &&
    umask 22  &&
    mkdir -p "$IOC_TARGET"  &&
    cp -r "$SOURCE"/* "$IOC_TARGET"  &&
    rm -rf "$IOC_TARGET"/install  
else
    # Compute EPICS and IOC paths relative to this directory.  
    PARENT="$(cd "$SOURCE/.."; pwd)"
    EPICS_TARGET="$PARENT/epics"
    IOC_TARGET="$PARENT/ioc"
    # Check that the parent directory contains the right files!
    [ "$IOC_TARGET" = "$SOURCE" -a -d "$EPICS_TARGET" ] ||
        Error "Inconsistent test installation environment"
fi  &&

# Now install the epics_ioc file.
(
    # Add on the paths required for running the IOC
    echo "EPICS_BASE='$EPICS_TARGET'"
    echo "LIBERA_IOC='$IOC_TARGET/runioc'"
    # We want to process three types of lines appropriately:
    #  1. Lines starting $LOCATION_IOC_... are translated to IOC_...
    #  2. Lines starting XX_IOC_... are discarded
    #  3. All other lines are passed through unchanged
    sed '
        /^'"$LOCATION"'_\(IOC_.*\)$/ { s//\1/; b; }
        /^[[:alpha:]][[:alnum:]]_IOC_/ d
        ' "$SOURCE"/install/epics_ioc
) > /etc/sysconfig/epics_ioc

# Copy the startup script
cp -f "$SOURCE"/install/epics /etc/init.d  &&
# Copy the gain.conf file, replacing the version in the default distribution,
# and add our own offsets.conf file.
cp -f "$SOURCE"/install/gain.conf /opt/dsc  &&
cp -f "$SOURCE"/install/offsets.conf /opt/dsc  &&

# Configure autostart as required.
if ((AUTOSTART)); then
    # Link the epics startup script in so that it automatically starts when
    # the IOC is booted.
    ln -sf ../init.d/epics /etc/rc3.d/S900epics  &&
    ln -sf ../init.d/epics /etc/rc6.d/K100epics
else
    # Disable autostart of the IOC on ioc reboot.
    rm -f /etc/rc3.d/S900epics /etc/rc6.d/K100epics
fi

if ((STARTNOW)); then
    /etc/init.d/epics start
fi
