Notes on the device driver interface.  These notes apply specifically to the
0.92-2 version of Libera, as the device driver interface has changed for
subsequent releases.

We use the following devices

/dev/libera.low     Access to events
/dev/libera.cfg     Configuration 
/dev/libera.dd      Data on Demand waveform readout

The following functionality is used

/dev/libera.low
===============

ioctl LIBERA_LOW_SET_EVENT  int
    Write 1 to enable event notification to the .low device, write 0 to
    disable notification.

read
    Returns one 8 byte packet for each event generated by Libera containing a
    message ID and an extra parameter.  The following message ids can be
    generated:
        LIBERA_NM_TRIGGER
            Hardware trigger received by Libera.
        LIBERA_NM_OVERFLOW
            Internal FPGA buffer overflow.  The extra parameter contains
            further information.
        LIBERA_NM_PM
            Postmortem hardware trigger received by Libera.

    If event notification is enabled and the event queue isn't read in a
    timely way then the device driver will complain.


/dev/libera.cfg
===============

ioctl LIBERA_IOC_GET_ATTN  unsigned char[8]
    Reads attenuators into an array of 8 values

ioctl LIBERA_IOC_SET_ATTN  unsigned char[8]
    Writes attenuators from an array of 8 values

Note that the array of 8 attenuator settings corresponds to the attenuator
controls on the RF inputs in a rather cryptic way.  Labelling the channels 1,
2, 3, 4 with first and second attenuation stages the mapping is as follows:
            stage
    channel   first   second
        1       4       5           Table entries are indexes into array
        2       2       3           of attenuator values used by ioctl.
        3       6       7
        4       0       1

??? The assignment above needs checking

The switch setting permutes the input signals ABCD to the input channels 1234
as described in the table below:

    ????


/dev/libera.dd
==============

ioctl LIBERA_IOC_GET_DEC  int*
    Reads the current decimation mode.  Currently can only be 1 or 64.

ioctl LIBERA_IOC_SET_DEC  int*
    Sets the current decimation mode.  Currently can only be 1 or 64.

_llseek 
    It's not clear that we need to use the non-standard _llseek method: it
    would be better if we could use lseek.  The following seek origins are
    supported:
        CSPI_SEEK_MT
        CSPI_SEEK_ST
        CSPI_SEEK_TR
            Origin is point of last trigger.
        
read
    Returns a 16 byte timestamp followed by waveform data.

    Needs more explicit documentation here!

