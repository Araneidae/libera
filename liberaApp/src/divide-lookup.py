#!/usr/bin/env python
# Python script to compute the division lookup table.

# Number of bits to generate lookup for
N = 10


# Computes division lookup entry.  The value for entry a should be equal to
#   2^(31+N) / (2^N + A + 1/2)
# We do the calculation using integer arithmetic.
def Division(A):
    return 2**(32+N) / (2**(N+1) + 2*A + 1)

M = 31 - N

print '/* Division lookup table for fast computation of reciprocals.'
print ' * Automatically generated by divide-lookup.py. */'
print
print '#define N_BITS   %d' % N
print '#define M_BITS   %d' % M
print '#define N_MASK   %d' % ((1 << N) - 1)
print '#define M_MASK   %d' % ((1 << M) - 1)
print '#define B_OFFSET %d' % (1 << (M-1))
print
print 'static const unsigned int DivisionLookup[%d] =' % (2**N)
print '{'

for i in range(2**N):
    if i % 4 == 0:
        print '   ',
    print '0x%08x,' % Division(i),
    if i % 4 == 3:
        print

print '};'
